cmake_minimum_required(VERSION 2.8.3)
project(mcr_contour_matching)

find_package(catkin REQUIRED
  COMPONENTS
    roscpp
    sensor_msgs
    std_msgs
    dynamic_reconfigure
    cv_bridge
    image_transport
    mcr_perception_msgs
)

generate_dynamic_reconfigure_options(
  ros/config/ContourFinder.cfg
)

find_package(OpenCV REQUIRED)
find_package(PCL 1.7 REQUIRED)

catkin_package()

include_directories(
  ros/include
  common/include
  ${catkin_INCLUDE_DIRS}
  ${OpenCV_INCLUDE_DIRS}
  ${PCL_INCLUDE_DIRS}
)

#...: gnu++0x
if(CMAKE_COMPILER_IS_GNUCXX)
    execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
    if(GCC_VERSION VERSION_GREATER 4.6 OR GCC_VERSION VERSION_EQUAL 4.6)
        add_definitions(-std=gnu++0x)
    else(GCC_VERSION VERSION_GREATER 4.6 OR GCC_VERSION VERSION_EQUAL 4.6)
        message(SEND_ERROR "You need GCC version 4.6 or greater to compile this package.")
    endif(GCC_VERSION VERSION_GREATER 4.6 OR GCC_VERSION VERSION_EQUAL 4.6)
endif(CMAKE_COMPILER_IS_GNUCXX)



### EXECUTABLES ###############################################
add_executable(contour_finder
  ros/src/contour_finder_node.cpp
  ros/src/contour_finder_ros.cpp
  common/src/contour_finder.cpp
)

add_executable(contour_template_matcher
  ros/src/contour_template_matcher_node.cpp
  ros/src/contour_template_matcher_ros.cpp
  common/src/contour_template_matcher.cpp
)

add_dependencies(contour_template_matcher
  ${catkin_EXPORTED_TARGETS}
)
add_dependencies(contour_finder
  ${catkin_EXPORTED_TARGETS}
)

target_link_libraries(contour_finder
  ${catkin_LIBRARIES}
  ${OpenCV_LIBRARIES}
  ${PCL_LIBRARIES}
)

target_link_libraries(contour_template_matcher
  ${catkin_LIBRARIES}
  ${PCL_LIBRARIES}
)

install(TARGETS contour_finder
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

install(TARGETS contour_template_matcher
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

install(DIRECTORY ros/include/${PROJECT_NAME}/
   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
   FILES_MATCHING PATTERN "*.h"
)

install(DIRECTORY common/include/${PROJECT_NAME}/
   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
   FILES_MATCHING PATTERN "*.h"
)

install(DIRECTORY ros/launch/
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/ros/launch
)

